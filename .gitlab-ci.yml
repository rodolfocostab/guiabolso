stages:
  - deploy-portainer
  - build-api
  - deploy-mongodb
  - deploy-local-api
  # - deploy-homolog
  # - deploy-prod

Gerando imagem Docker api:
  stage: build-api
  script:
    - docker build . --tag node-api:$CI_COMMIT_TAG
  only:
    - tags
  tags:
    - shell

Deploy Portainer:
  stage: deploy-portainer
  script:
    - docker stack deploy --compose-file=./dev/portainer.yml api
  tags:
    - shell
  when: manual

Inicio do Deploy:
  stage: deploy-mongodb
  script:
    - |
      curl --location --request POST "http://127.0.0.1:3000/deploy" \
      --header "Content-Type: application/json" \
      --data "{\"Versao\": \"${CI_COMMIT_TAG}\", \"Componente\": \"Deploy-teste\", \"Responsavel\": \"${GITLAB_USER_EMAIL}\"}"
  only:
    - tags
  tags:
    - shell

Deploy MongoDB:
  stage: deploy-mongodb
  before_script:
    - |
      curl --location --request POST "http://127.0.0.1:3000/deploy" \
      --header "Content-Type: application/json" \
      --data "{\"status\": \"processando\", \"Versao\": \"${CI_COMMIT_TAG}\", \"Componente\": \"Deploy-teste\", \"Responsavel\": \"${GITLAB_USER_EMAIL}\"}"
  script:
    - docker stack deploy --compose-file=./dev/mongodb.yml api
  only:
    - tags
  tags:
    - shell

Deploy API:
  stage: deploy-local-api
  script:
    - docker stack deploy --compose-file=./dev/server.yml api
    - |
      curl --location --request POST "http://127.0.0.1:3000/deploy" \
      --header "Content-Type: application/json" \
      --data "{\"status\": \"completo\", \"Versao\": \"${CI_COMMIT_TAG}\", \"Componente\": \"Deploy-teste\", \"Responsavel\": \"${GITLAB_USER_EMAIL}\"}"
  only:
    - tags
  tags:
    - shell
